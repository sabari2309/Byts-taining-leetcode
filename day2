class Solution {
    public int findDuplicate(int[] nums) {
        int len=nums.length;
        int ans=0;
        for(int i=0;i<len;i++)
        {
            for(int j=i+1;j<len;j++)
            {
                if(nums[i]==nums[j])
                {
                    ans=nums[j];
                }
            }
        }
        return ans;
        
    }
}


public class Solution 
{
    public List<Integer> majorityElement(int[] nums)
    {
        List<Integer> ans = new ArrayList<Integer>();
        int len = nums.length;
        if(len == 0)
            return ans;
        Arrays.sort(nums);
        int cur = nums[0];
        int count = 1;
        for(int i = 1; i < nums.length; i++)
        {
            if(nums[i] == cur)
                count++;
            else if(count > (len/3))
            {
                ans.add(cur);
                cur = nums[i];
                count = 1;
            }
            else
            {
                cur = nums[i];
                count = 1;
            }
        }
        if(count > (len/3))
            ans.add(cur);
        return ans;
    }
}
